!function(){"use strict";var e={};e.p="bundles/jblsimplebundle/",window?.__sw__?.assetPath&&(e.p=window.__sw__.assetPath+"/bundles/jblsimplebundle/"),function(){Shopware.Component.override("sw-product-detail",{template:'{% block sw_product_detail_content_tabs_reviews %}\n    {% parent %}\n\n    <sw-tabs-item :route="{ name: \'sw.product.detail.bundle\', params: { id: $route.params.id } }" title="Bundle">\n        Bundle\n    </sw-tabs-item>\n{% endblock %}'});let{Context:e,Component:t,Mixin:n,Utils:d}=Shopware,{Criteria:i}=Shopware.Data,{mapState:o}=Shopware.Component.getComponentHelper();Shopware.Component.register("sw-product-detail-bundle",{template:'<div class="sw-product-detail-bundle">\n<template v-if="isLoading">\n    <sw-skeleton variant="detail-bold" />\n    <sw-skeleton />\n</template>\n\n<sw-card title="Produkte dem Bundle hinzuf\xfcgen" v-else>\n\n    <sw-entity-single-select\n            :isLoading="isLoading"\n            :displayVariants="true"\n            :criteria="productCriteria"\n            :context="contextWithInheritance"\n            entity="product"\n            labelProperty="name"\n            placeholder="Produkt ausw\xe4hlen"\n            label="Produkt zum Bundle hinzuf\xfcgen"\n            v-model="selectedProduct"\n            @update:value="onAddProduct">\n\n        <template #selection-label-property="{ item }">\n            <slot\n                    name="selection-label-property"\n                    v-bind="{ item }"\n            >\n                    <sw-product-variant-info :variations="item.variation">\n                        {{ item.translated.name || item.name }}\n                    </sw-product-variant-info>\n            </slot>\n        </template>\n\n        <template #result-item="{ item, index }">\n            <slot\n                name="result-item"\n                v-bind="{ item, index }"\n            >\n                <sw-select-result\n                        v-bind="{ item, index }"\n                >\n                    <sw-product-variant-info :variations="item.variation">\n                        {{ item.translated.name || item.name }}\n                    </sw-product-variant-info>\n                </sw-select-result>\n            </slot>\n        </template>\n    </sw-entity-single-select>\n\n    <sw-data-grid  v-if="product.bundleProducts.length > 0"\n                   :full-page="false"\n                   :dataSource="product.bundleProducts"\n                   :columns="bundleProductColumns"\n                   :showSelection="false"\n                   :isLoading="isLoading"\n                   :compactMode="false"\n    >\n\n        <template #column-bundleProduct.cover="{ item }">\n            <sw-media-preview-v2 :source="item.bundleProduct.cover ? item.bundleProduct.cover.media : null" />\n        </template>\n\n        <template #column-bundleProduct.name="{ item }">\n            <sw-product-variant-info :variations="item.bundleProduct.variation">\n                {{ item.bundleProduct.translated.name || item.bundleProduct.name }}\n            </sw-product-variant-info>\n        </template>\n\n        <template #column-quantity="{ item }">\n            <sw-number-field\n                    v-model="item.quantity"\n                    @change="syncBundleProducts"\n                    numberType="int"\n                    :min=1\n            ></sw-number-field>\n        </template>\n\n        <template #column-active="{ item }">\n            <sw-label v-if="item.active" appearance="pill" variant="success">Aktiv</sw-label>\n            <sw-label v-else appearance="pill" variant="warning">Inaktiv</sw-label>\n        </template>\n\n        <template #actions="{ item, itemIndex }">\n\n            <sw-context-menu-item class="sw-product-detail-bundle__grid-action" @click.prevent="onDeleteBundleProduct(item, itemIndex)" variant="danger">\n                L\xf6schen\n            </sw-context-menu-item>\n\n            <sw-context-menu-item v-if="item.active" class="sw-product-detail-bundle__grid-action" @click.prevent="onDisableBundleProduct(item, itemIndex)">\n                Deaktivieren\n            </sw-context-menu-item>\n            <sw-context-menu-item v-else class="sw-product-detail-bundle__grid-action" @click.prevent="onEnableBundleProduct(item, itemIndex)">\n                Aktivieren\n            </sw-context-menu-item>\n        </template>\n\n    </sw-data-grid>\n\n    <sw-empty-state v-if="product.bundleProducts.length == 0" title="Noch keine Bundle Produkte zugeordnet" :absolute="false">\n        <template #icon>\n            <img :src="\'/administration/static/img/empty-states/products-empty-state.svg\' | asset">\n        </template>\n    </sw-empty-state>\n</sw-card>\n</div>',inject:["repositoryFactory"],data(){return{isLoading:!0,isSaveSuccessful:!1,selectedProduct:null}},metaInfo(){return{title:"Bundle"}},watch:{"product.id":{immediate:!0,handler(e){e&&this.loadAssignedBundleProducts()}}},computed:{...o("swProductDetail",["product"]),productRepository(){return this.repositoryFactory.create("product")},bundleProductRepository(){return this.repositoryFactory.create("jbl_bundle_product")},contextWithInheritance(){return{...Shopware.Context.api,inheritance:!0}},bundleProductColumns(){return this.getBundleProductColumns()},productCriteria(){let e=new i(1,25);return e.addAssociation("options"),e.addAssociation("options.group"),e.addAssociation("cover"),e.addAssociation("cover.media"),e.addAssociation("bundleProducts"),e.addFilter(i.equals("active",!0)),e}},created(){this.createdComponent()},methods:{createdComponent(){void 0!==this.product.id&&this.loadAssignedBundleProducts()},async loadAssignedBundleProducts(){if(!this.product||!this.product.id)return;this.isLoading=!0;let e=new i;e.addFilter(i.equals("productId",this.product.id)),e.addAssociation("bundleProduct"),e.addAssociation("bundleProduct.cover"),e.addAssociation("bundleProduct.cover.media"),e.addAssociation("bundleProduct.options"),e.addAssociation("bundleProduct.options.group"),this.product.bundleProducts=await this.bundleProductRepository.search(e,this.contextWithInheritance),this.isLoading=!1},getBundleProductColumns(){return[{property:"bundleProduct.cover",dataIndex:"bundleProduct.cover",label:"Vorschau",align:"center",width:"15%"},{property:"bundleProduct.name",dataIndex:"bundleProduct.name",label:"Produkt",width:"55%"},{property:"quantity",dataIndex:"quantity",label:"Anzahl",width:"15%"},{property:"active",dataIndex:"active",label:"Aktiv",width:"15%"}]},isVariant(e){return null!==e.parentId},onAddProduct(e,t){let n=this.bundleProductRepository.create();n.quantity=1,n.active=!0,n.bundleProductId=e,n.bundleProduct=t,n.productId=this.product.id,this.product.bundleProducts.push(n),this.syncBundleProducts()},onDeleteBundleProduct(e,t){this.bundleProductRepository.delete(e.id).then(()=>{this.product.bundleProducts.splice(t,1),this.syncBundleProducts()})},onDisableBundleProduct(e,t){e.active=!1,this.syncBundleProducts()},onEnableBundleProduct(e,t){e.active=!0,this.syncBundleProducts()},syncBundleProducts(){this.bundleProductRepository.sync(this.product.bundleProducts,e.api)}}}),Shopware.Module.register("sw-product-detail-bundle-tab",{routeMiddleware(e,t){let n="sw.product.detail.bundle";"sw.product.detail"===t.name&&t.children.every(e=>e.name!==n)&&t.children.push({name:n,path:"/sw/product/detail/:id/bundle",component:"sw-product-detail-bundle",meta:{parentPath:"sw.product.index"}}),e(t)}})}()}();